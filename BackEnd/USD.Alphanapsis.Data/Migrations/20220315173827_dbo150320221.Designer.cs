// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using USD.Alphanapsis.Data;

namespace USD.Alphanapsis.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220315173827_dbo150320221")]
    partial class dbo150320221
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Agrupamiento", b =>
                {
                    b.Property<int>("AgrupamientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AreaEstudioId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("AgrupamientoId");

                    b.HasIndex("AreaEstudioId");

                    b.ToTable("Agrupamiento");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.AreaEstudio", b =>
                {
                    b.Property<int>("AreaEstudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoInterno")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reporte")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sigla")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("AreaEstudioId");

                    b.ToTable("AreaEstudio");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.CentroSaludAsistencial", b =>
                {
                    b.Property<int>("CentroSaludAsistencialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CentroSaludOrigenId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoInterno")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("CentroSaludAsistencialId");

                    b.HasIndex("CentroSaludOrigenId");

                    b.ToTable("CentroSaludAsistencial");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.CentroSaludOrigen", b =>
                {
                    b.Property<int>("CentroSaludOrigenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoExterno")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CodigoInterno")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("CentroSaludOrigenId");

                    b.ToTable("CentroSaludOrigen");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Configuracion", b =>
                {
                    b.Property<int>("ConfiguracionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Parametro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ConfiguracionId");

                    b.ToTable("Configuracion");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.ContenidoEstatico", b =>
                {
                    b.Property<int>("ContenidoEstaticoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Campo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("NVARCHAR(4000)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("ContenidoEstaticoId");

                    b.ToTable("ContenidoEstatico");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.ContenidoEstaticoIdioma", b =>
                {
                    b.Property<int>("ContenidoEstaticoIdiomaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContenidoEstaticoId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<int>("IdiomaId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("NVARCHAR(4000)");

                    b.HasKey("ContenidoEstaticoIdiomaId");

                    b.HasIndex("ContenidoEstaticoId");

                    b.HasIndex("IdiomaId");

                    b.ToTable("ContenidoEstaticoIdioma");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Correlativo", b =>
                {
                    b.Property<int>("CorrelativoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ceros")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Prefijo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)");

                    b.Property<int>("TipoCorrelativo")
                        .HasColumnType("INT");

                    b.Property<int>("Valor")
                        .HasColumnType("INT");

                    b.HasKey("CorrelativoId");

                    b.ToTable("Correlativo");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Equipo", b =>
                {
                    b.Property<int>("EquipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AreaEstudioId")
                        .HasColumnType("int");

                    b.Property<string>("CodUnico")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Marca")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<bool?>("MatchAutomatico")
                        .HasColumnType("bit");

                    b.Property<string>("Modelo")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Serie")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int?>("TipoBarcodeId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoInterfazId")
                        .HasColumnType("int");

                    b.HasKey("EquipoId");

                    b.HasIndex("AreaEstudioId");

                    b.HasIndex("TipoInterfazId");

                    b.ToTable("Equipo");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Especialidad", b =>
                {
                    b.Property<int>("EspecialidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("EspecialidadId");

                    b.ToTable("Especialidad");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.EstadoCivil", b =>
                {
                    b.Property<int>("EstadoCivilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("EstadoCivilId");

                    b.ToTable("EstadoCivil");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.GalenoSolExaLab", b =>
                {
                    b.Property<int>("GalenoSolExaLabId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApeMatMedico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApeMatPac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApePatMedico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApePatPac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CMPMedico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoProcesoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FecNacimientoPac")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Financiamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FinanciamientoId")
                        .HasColumnType("int");

                    b.Property<string>("NombresMedico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombresPac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumCuenta")
                        .HasColumnType("int");

                    b.Property<string>("NumDocumentoPac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumHistoriaPac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumMovimiento")
                        .HasColumnType("int");

                    b.Property<int>("NumOrden")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenId")
                        .HasColumnType("int");

                    b.Property<int>("SGSSSolExaLabId")
                        .HasColumnType("int");

                    b.Property<string>("Servicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServicioId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SexoPac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoId")
                        .HasColumnType("int");

                    b.Property<string>("Ubigeo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GalenoSolExaLabId");

                    b.HasIndex("OrdenId");

                    b.HasIndex("SGSSSolExaLabId");

                    b.ToTable("GalenoSolExaLab");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.GalenoSolExaLabDet", b =>
                {
                    b.Property<int>("GalenoSolExaLabDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoCPT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionCPT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoProcesoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaProgramada")
                        .HasColumnType("datetime2");

                    b.Property<int>("FinanciamientoId")
                        .HasColumnType("int");

                    b.Property<int>("GalenoSolExaLabId")
                        .HasColumnType("int");

                    b.Property<int>("NumCuenta")
                        .HasColumnType("int");

                    b.Property<int>("NumMovimiento")
                        .HasColumnType("int");

                    b.Property<int>("NumOrden")
                        .HasColumnType("int");

                    b.HasKey("GalenoSolExaLabDetId");

                    b.HasIndex("GalenoSolExaLabId");

                    b.ToTable("GalenoSolExaLabDet");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.GeoIp", b =>
                {
                    b.Property<int>("GeoIpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CC02")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("NVARCHAR(4)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<long>("IPNFIN")
                        .HasColumnType("BIGINT");

                    b.Property<long>("IPNINI")
                        .HasColumnType("BIGINT");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("GeoIpId");

                    b.ToTable("GeoIp");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.HISEnvioExamen", b =>
                {
                    b.Property<int>("HISEnvioExamenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoDomicilio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoLab")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoMedico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPerfilPrueba")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPrueba")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoSec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoSede")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoUbicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoProcesoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPrueba")
                        .HasColumnType("datetime2");

                    b.Property<string>("HISNumero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroActoMedico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroAsegurado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroHistClinica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdenId")
                        .HasColumnType("int");

                    b.Property<int>("OrdenPaqueteDetalleId")
                        .HasColumnType("int");

                    b.Property<int>("OrdenPaqueteId")
                        .HasColumnType("int");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HISEnvioExamenId");

                    b.ToTable("HISEnvioExamen");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.HISEquivPaqueteEquipo", b =>
                {
                    b.Property<int>("HISEquivPaqueteEquipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoPruebaHIS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<int>("PaqueteId")
                        .HasColumnType("int");

                    b.HasKey("HISEquivPaqueteEquipoId");

                    b.ToTable("HISEquivPaqueteEquipo");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.HISEquivPaqueteServicio", b =>
                {
                    b.Property<int>("HISEquivPaqueteServicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoPruebaHIS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaqueteId")
                        .HasColumnType("int");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("HISEquivPaqueteServicioId");

                    b.ToTable("HISEquivPaqueteServicio");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Idioma", b =>
                {
                    b.Property<int>("IdiomaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("Prefijo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR(10)");

                    b.HasKey("IdiomaId");

                    b.ToTable("Idioma");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.IntEquivPaqueteEquipo", b =>
                {
                    b.Property<int>("IntEquivPaqueteEquipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaHosp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoCPS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoMuestra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<int>("PaqueteId")
                        .HasColumnType("int");

                    b.HasKey("IntEquivPaqueteEquipoId");

                    b.ToTable("IntEquivPaqueteEquipo");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.LogTransaccion", b =>
                {
                    b.Property<int>("LogTransaccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Proceso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogTransaccionId");

                    b.ToTable("LogTransaccion");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.MSSolExaLab", b =>
                {
                    b.Property<int>("MSSolExaLabId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Celular_Paciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodUbicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoEspecialidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoHC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoOA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoTarifa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion_Paciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentoPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empleadora_Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empleadora_RUC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialidad_Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoOrden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoProcesoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAtencion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaLimiteAtencion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimientoPac")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdConsultaExterna")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdMedico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdOrdenAtencion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdPaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Local")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicoAPMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicoAPPaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicoCMP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicoCelular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicoCorreoelectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicoNombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicoSexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicoTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicoTipoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroCama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdenId")
                        .HasColumnType("int");

                    b.Property<string>("Origen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PacienteAPMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PacienteAPPaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PacienteCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PacienteNombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prioridad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RUCContratante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sucursal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SucursalLab")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tarifa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono_Paciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAtencion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoOrdenAtencion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoOrdenAtencion_Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitularNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnidadNegocio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioOrden")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MSSolExaLabId");

                    b.ToTable("MSSolExaLab");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.MSSolExaLabDet", b =>
                {
                    b.Property<int>("MSSolExaLabDetiD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CantidadSolicitada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoOA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Componente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponenteNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoProcesoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdOrdenAtencion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndRevertido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Linea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MSSolExaLabId")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenId")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenPaqueteId")
                        .HasColumnType("int");

                    b.HasKey("MSSolExaLabDetiD");

                    b.ToTable("MSSolExaLabDet");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Medico", b =>
                {
                    b.Property<int>("MedicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoMaterno")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ApellidoPaterno")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Celular")
                        .HasMaxLength(13)
                        .HasColumnType("NVARCHAR(13)");

                    b.Property<string>("CodigoInterno")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("CorreoElectronico")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombres")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("NroColegiatura")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasMaxLength(130)
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.HasKey("MedicoId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Metodo", b =>
                {
                    b.Property<int>("MetodoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR(150)");

                    b.HasKey("MetodoId");

                    b.ToTable("Metodo");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Notificacion", b =>
                {
                    b.Property<int>("NotificacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ADJUNTO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BCC")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("BODY")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CC")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("DIRECTORIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FROM")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR(250)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdAsociado")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("SUBJECT")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TO")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int>("TipoNotificacionId")
                        .HasColumnType("int");

                    b.HasKey("NotificacionId");

                    b.ToTable("Notificacion");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Opcion", b =>
                {
                    b.Property<int>("OpcionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Etiqueta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Icono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int?>("Orden")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OpcionId");

                    b.ToTable("Opcion");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OpcionPerfil", b =>
                {
                    b.Property<int>("OpcionPerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int?>("OpcionId")
                        .HasColumnType("int");

                    b.Property<int?>("PerfilId")
                        .HasColumnType("int");

                    b.HasKey("OpcionPerfilId");

                    b.HasIndex("OpcionId");

                    b.HasIndex("PerfilId");

                    b.ToTable("OpcionPerfil");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OpcionUsuario", b =>
                {
                    b.Property<int>("OpcionUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int?>("OpcionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("OpcionUsuarioId");

                    b.HasIndex("OpcionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("OpcionUsuario");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Orden", b =>
                {
                    b.Property<int>("OrdenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CentroSaludAsistencialId")
                        .HasColumnType("int");

                    b.Property<int?>("CentroSaludOrigenId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Diagnostico")
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<int?>("EstadoOrdenId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("HISNumero")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int?>("MedicoId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("NroCama")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("NroHistoriaClinica")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int?>("ProcedenciaId")
                        .HasColumnType("int");

                    b.Property<int?>("ServicioSaludId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoAtencionId")
                        .HasColumnType("int");

                    b.Property<int>("TipoOrdenId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoPacienteId")
                        .HasColumnType("int");

                    b.HasKey("OrdenId");

                    b.HasIndex("CentroSaludAsistencialId");

                    b.HasIndex("CentroSaludOrigenId");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.HasIndex("ProcedenciaId");

                    b.HasIndex("ServicioSaludId");

                    b.HasIndex("TipoOrdenId");

                    b.HasIndex("TipoPacienteId");

                    b.ToTable("Orden");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OrdenPaquete", b =>
                {
                    b.Property<int>("OrdenPaqueteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int?>("EquipoId")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoOrdenPaqueteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaAprobacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaProcesamiento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("InformeResultado")
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("NroOrden")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<int>("OrdenId")
                        .HasColumnType("int");

                    b.Property<int>("PaqueteId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioApruebaId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioInterface")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("OrdenPaqueteId");

                    b.HasIndex("EquipoId");

                    b.HasIndex("OrdenId");

                    b.HasIndex("PaqueteId");

                    b.ToTable("OrdenPaquete");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OrdenPaqueteAcceso", b =>
                {
                    b.Property<int>("OrdenPaqueteAccesoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIniVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("OrdenId")
                        .HasColumnType("int");

                    b.Property<int>("OrdenPaqueteId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrdenPaqueteAccesoId");

                    b.HasIndex("OrdenId");

                    b.HasIndex("OrdenPaqueteId");

                    b.ToTable("OrdenPaqueteAcceso");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OrdenPaqueteDetalle", b =>
                {
                    b.Property<int>("OrdenPaqueteDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoUnico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodigoUnicoExamen")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int?>("EstadoServicioId")
                        .HasColumnType("int");

                    b.Property<string>("EvaluacionPrueba")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("FechaProcesaInterface")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaResultado")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<bool?>("FlagEnvioSE")
                        .HasColumnType("bit");

                    b.Property<bool?>("FlagResultadoEnvioSE")
                        .HasColumnType("bit");

                    b.Property<string>("Indicador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Observacion")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int?>("OrdenId")
                        .HasColumnType("int");

                    b.Property<int>("OrdenPaqueteId")
                        .HasColumnType("int");

                    b.Property<string>("ResultadoAutomatizado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("ValorReferencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValorUnidad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrdenPaqueteDetalleId");

                    b.HasIndex("OrdenId");

                    b.HasIndex("OrdenPaqueteId");

                    b.HasIndex("ServicioId");

                    b.ToTable("OrdenPaqueteDetalle");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OrdenPaqueteImagenes", b =>
                {
                    b.Property<int>("OrdenPaqueteImagenesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrdenId")
                        .HasColumnType("int");

                    b.Property<int>("OrdenPaqueteId")
                        .HasColumnType("int");

                    b.Property<byte[]>("PLTHistograma")
                        .HasColumnType("image");

                    b.Property<byte[]>("RBCHistograma")
                        .HasColumnType("image");

                    b.Property<byte[]>("S0Histograma")
                        .HasColumnType("image");

                    b.Property<byte[]>("S10DIFFScattergram")
                        .HasColumnType("image");

                    b.Property<byte[]>("S90DDIFFScattergram")
                        .HasColumnType("image");

                    b.Property<byte[]>("WBCHistograma")
                        .HasColumnType("image");

                    b.HasKey("OrdenPaqueteImagenesId");

                    b.HasIndex("OrdenId");

                    b.HasIndex("OrdenPaqueteId");

                    b.ToTable("OrdenPaqueteImagenes");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OrdenPaqueteTramas", b =>
                {
                    b.Property<int>("OrdenPaqueteTramasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrdenId")
                        .HasColumnType("int");

                    b.Property<int>("OrdenPaqueteId")
                        .HasColumnType("int");

                    b.Property<string>("TramaEnvio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TramaResultado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrdenPaqueteTramasId");

                    b.HasIndex("OrdenId");

                    b.HasIndex("OrdenPaqueteId");

                    b.ToTable("OrdenPaqueteTramas");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OrdenReporteCorrelativo", b =>
                {
                    b.Property<int>("OrdenReporteCorrelativoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoOA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correlativo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Grupo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lineas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreReporte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdenId")
                        .HasColumnType("int");

                    b.Property<string>("Sucursal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrdenReporteCorrelativoId");

                    b.ToTable("OrdenReporteCorrelativo");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OrdenServicioCalculado", b =>
                {
                    b.Property<int>("OrdenServicioCalculadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("OrdenServicioFormulaId")
                        .HasColumnType("int");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.Property<int>("TipoMuestraAnalizadorId")
                        .HasColumnType("int");

                    b.HasKey("OrdenServicioCalculadoId");

                    b.HasIndex("OrdenServicioFormulaId");

                    b.HasIndex("ServicioId");

                    b.ToTable("OrdenServicioCalculado");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OrdenServicioFormula", b =>
                {
                    b.Property<int>("OrdenServicioFormulaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Formula")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("OrdenServicioFormulaId");

                    b.HasIndex("ServicioId");

                    b.ToTable("OrdenServicioFormula");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Paciente", b =>
                {
                    b.Property<int>("PacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoMaterno")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ApellidoPaterno")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Celular")
                        .HasMaxLength(13)
                        .HasColumnType("NVARCHAR(13)");

                    b.Property<string>("CorreoElectronico")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int?>("Edad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("DATE");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombres")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("NroAsegurado")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("NroHistoriaClinica")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasMaxLength(130)
                        .HasColumnType("NVARCHAR(130)");

                    b.Property<int?>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<int?>("UbigeoId")
                        .HasColumnType("int");

                    b.HasKey("PacienteId");

                    b.HasIndex("TipoDocumentoId");

                    b.HasIndex("UbigeoId");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Paquete", b =>
                {
                    b.Property<int>("PaqueteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AreaEstudioId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<bool?>("EstadisticaAgp")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<bool?>("ImprimeEtiqueta")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int?>("TipoMuestraAnalizadorId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoMuestraId")
                        .HasColumnType("int");

                    b.HasKey("PaqueteId");

                    b.HasIndex("AreaEstudioId");

                    b.HasIndex("TipoMuestraAnalizadorId");

                    b.ToTable("Paquete");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.PaqueteConexion", b =>
                {
                    b.Property<int>("PaqueteConexionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoConexion")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("PaqueteId")
                        .HasColumnType("int");

                    b.HasKey("PaqueteConexionId");

                    b.HasIndex("PaqueteId");

                    b.ToTable("PaqueteConexion");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.PaqueteEquipo", b =>
                {
                    b.Property<int>("PaqueteEquipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("PaqueteId")
                        .HasColumnType("int");

                    b.HasKey("PaqueteEquipoId");

                    b.HasIndex("EquipoId");

                    b.HasIndex("PaqueteId");

                    b.ToTable("PaqueteEquipo");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.PaqueteServicio", b =>
                {
                    b.Property<int>("PaqueteServicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("PaqueteId")
                        .HasColumnType("int");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("PaqueteServicioId");

                    b.HasIndex("PaqueteId");

                    b.HasIndex("ServicioId");

                    b.ToTable("PaqueteServicio");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.ParametroCalculado", b =>
                {
                    b.Property<int>("ParametroCalculadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("PaqueteEquipoId")
                        .HasColumnType("int");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("ParametroCalculadoId");

                    b.HasIndex("PaqueteEquipoId");

                    b.HasIndex("ServicioId");

                    b.ToTable("ParametroCalculado");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.ParametroEquipo", b =>
                {
                    b.Property<int>("ParametroEquipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int?>("ParametroInterfazId")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("ParametroEquipoId");

                    b.HasIndex("EquipoId");

                    b.HasIndex("ParametroInterfazId");

                    b.ToTable("ParametroEquipo");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.ParametroInterfaz", b =>
                {
                    b.Property<int>("ParametroInterfazId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConfigInterfaceId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Parametro")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int?>("TipoInterfazId")
                        .HasColumnType("int");

                    b.HasKey("ParametroInterfazId");

                    b.HasIndex("TipoInterfazId");

                    b.ToTable("ParametroInterfaz");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Perfil", b =>
                {
                    b.Property<int>("PerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("PerfilId");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Procedencia", b =>
                {
                    b.Property<int>("ProcedenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoHIS")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("ProcedenciaId");

                    b.ToTable("Procedencia");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.SGSSSolExaLab", b =>
                {
                    b.Property<int>("SGSSSolExaLabId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstadoProcesoId")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenId")
                        .HasColumnType("int");

                    b.Property<string>("SolEqpAreHosCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpCamCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpCenAsiCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpCenQuiCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpCreFec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpDirIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpEmeCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpEstEnfCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SolEqpExaNum")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,0)");

                    b.Property<string>("SolEqpHabCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpOrdCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpOriCenAsiCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpPacApeMat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpPacApePat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpPacAutCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpPacDocIdenNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SolEqpPacEdad")
                        .HasPrecision(3)
                        .HasColumnType("decimal(3,0)");

                    b.Property<string>("SolEqpPacEstCivCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpPacFamTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SolEqpPacHisCliNum")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,0)");

                    b.Property<DateTime?>("SolEqpPacNacFec")
                        .HasColumnType("datetime2");

                    b.Property<string>("SolEqpPacPriNom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpPacSegNom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpPacSexCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpPacTelCel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpPacTelFij")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpPacTipDocIdenCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpPerAsisDocIden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpProApeMat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpProApePat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpProColCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpProEqLCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpProPriNom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpProSegNom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpSalOpeCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpSerHosCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpSisCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SolEqpSolExaFec")
                        .HasColumnType("datetime2");

                    b.Property<string>("SolEqpTipDocIdenPerCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpTipExaCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpTopEmeCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpUsuCreCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolFlgExito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolFlgTransferencia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SGSSSolExaLabId");

                    b.HasIndex("OrdenId");

                    b.ToTable("SGSSSolExaLab");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.SGSSSolExaLabCPS", b =>
                {
                    b.Property<int>("SGSSSolExaLabCPSId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstadoProcesoId")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenId")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenPaqueteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResEqpTomaFec")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResEqpTomaHor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SGSSSolExaLabId")
                        .HasColumnType("int");

                    b.Property<string>("SolEqpAreExaCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpCPSCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpCenAsiCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SolEqpExaNum")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,0)");

                    b.Property<string>("SolEqpFlgTransEqp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpMueCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpOriCenAsiCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpProvCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpSedExaCod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolEqpTipExaCod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SGSSSolExaLabCPSId");

                    b.HasIndex("OrdenId");

                    b.HasIndex("OrdenPaqueteId");

                    b.HasIndex("SGSSSolExaLabId");

                    b.ToTable("SGSSSolExaLabCPS");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Servicio", b =>
                {
                    b.Property<int>("ServicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AreaEstudioId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("NVARCHAR(1000)");

                    b.Property<bool?>("EsCalculado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<int?>("MetodoId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<decimal?>("MultiplicarPor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Referencia")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<int?>("ReporteColumna")
                        .HasColumnType("int");

                    b.Property<bool?>("ReporteMostrar")
                        .HasColumnType("bit");

                    b.Property<string>("ReporteNombre")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int?>("ReporteOrden")
                        .HasColumnType("int");

                    b.Property<int?>("TipoDatoId")
                        .HasColumnType("int");

                    b.Property<bool?>("TipoResultado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Trazable")
                        .HasColumnType("bit");

                    b.Property<string>("UnidadMedida")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR(10)");

                    b.HasKey("ServicioId");

                    b.HasIndex("AreaEstudioId");

                    b.HasIndex("MetodoId");

                    b.ToTable("Servicio");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.ServicioAgrupamiento", b =>
                {
                    b.Property<int>("ServicioAgrupamientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgrupamientoId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("ServicioAgrupamientoId");

                    b.HasIndex("AgrupamientoId");

                    b.HasIndex("ServicioId");

                    b.ToTable("ServicioAgrupamiento");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.ServicioInterfaz", b =>
                {
                    b.Property<int>("ServicioInterfazId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoInterfaz")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("EquipoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("ServicioInterfazId");

                    b.HasIndex("EquipoId");

                    b.HasIndex("ServicioId");

                    b.ToTable("ServicioInterfaz");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.ServicioSalud", b =>
                {
                    b.Property<int>("ServicioSaludId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoHIS")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("ServicioSaludId");

                    b.ToTable("ServicioSalud");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.TipoDocumento", b =>
                {
                    b.Property<int>("TipoDocumentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoHIS")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<int>("Longitud")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("TipoDocumentoId");

                    b.ToTable("TipoDocumento");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.TipoInterfaz", b =>
                {
                    b.Property<int>("TipoInterfazId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("TipoInterfazId");

                    b.ToTable("TipoInterfaz");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.TipoMuestraAnalizador", b =>
                {
                    b.Property<int>("TipoMuestraAnalizadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("TipoMuestraAnalizadorId");

                    b.ToTable("TipoMuestraAnalizador");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.TipoOrden", b =>
                {
                    b.Property<int>("TipoOrdenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("TipoOrdenId");

                    b.ToTable("TipoOrden");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.TipoPaciente", b =>
                {
                    b.Property<int>("TipoPacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoHIS")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("TipoPacienteId");

                    b.ToTable("TipoPaciente");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.TrazabilidadAcceso", b =>
                {
                    b.Property<int>("TrazabilidadAccesoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIniVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrazabilidadAccesoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("TrazabilidadAcceso");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.TrazabilidadServicio", b =>
                {
                    b.Property<int>("TrazabilidadServicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.Property<int>("TrazabilidadAnno")
                        .HasColumnType("int");

                    b.Property<int>("TrazabilidadMes")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("TrazabilidadServicioId");

                    b.HasIndex("PacienteId");

                    b.HasIndex("ServicioId");

                    b.ToTable("TrazabilidadServicio");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Ubigeo", b =>
                {
                    b.Property<int>("UbigeoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasMaxLength(6)
                        .HasColumnType("NVARCHAR(6)");

                    b.Property<string>("Departamento")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("DepartamentoId")
                        .HasMaxLength(2)
                        .HasColumnType("NVARCHAR(2)");

                    b.Property<string>("Distrito")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("DistritoId")
                        .HasMaxLength(2)
                        .HasColumnType("NVARCHAR(2)");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("ProvinciaId")
                        .HasMaxLength(2)
                        .HasColumnType("NVARCHAR(2)");

                    b.HasKey("UbigeoId");

                    b.ToTable("Ubigeo");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoMaterno")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("CodigoInterno")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int?>("EspecialidadId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCese")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int?>("TipoAtencionId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR(40)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("EspecialidadId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.UsuarioPerfil", b =>
                {
                    b.Property<int>("UsuarioPerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioPerfilId");

                    b.HasIndex("PerfilId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioPerfil");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.UsuarioSede", b =>
                {
                    b.Property<int>("UsuarioSedeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CentroSaludAsistencialId")
                        .HasColumnType("int");

                    b.Property<int>("CentroSaludOrigenId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlagActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("FlagEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioSedeId");

                    b.HasIndex("CentroSaludAsistencialId");

                    b.HasIndex("CentroSaludOrigenId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioSede");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Agrupamiento", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.AreaEstudio", "AreaEstudio")
                        .WithMany()
                        .HasForeignKey("AreaEstudioId");

                    b.Navigation("AreaEstudio");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.CentroSaludAsistencial", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.CentroSaludOrigen", "CentroSaludOrigen")
                        .WithMany()
                        .HasForeignKey("CentroSaludOrigenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CentroSaludOrigen");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.ContenidoEstaticoIdioma", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.ContenidoEstatico", "ContenidoEstatico")
                        .WithMany()
                        .HasForeignKey("ContenidoEstaticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.Idioma", "Idioma")
                        .WithMany()
                        .HasForeignKey("IdiomaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContenidoEstatico");

                    b.Navigation("Idioma");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Equipo", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.AreaEstudio", "AreaEstudio")
                        .WithMany()
                        .HasForeignKey("AreaEstudioId");

                    b.HasOne("USD.Alphanapsis.Entidades.TipoInterfaz", "TipoInterfaz")
                        .WithMany()
                        .HasForeignKey("TipoInterfazId");

                    b.Navigation("AreaEstudio");

                    b.Navigation("TipoInterfaz");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.GalenoSolExaLab", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("OrdenId");

                    b.HasOne("USD.Alphanapsis.Entidades.SGSSSolExaLab", "SGSSSolExaLab")
                        .WithMany()
                        .HasForeignKey("SGSSSolExaLabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");

                    b.Navigation("SGSSSolExaLab");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.GalenoSolExaLabDet", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.GalenoSolExaLab", "GalenoSolExaLab")
                        .WithMany()
                        .HasForeignKey("GalenoSolExaLabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GalenoSolExaLab");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Medico", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OpcionPerfil", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Opcion", "Opcion")
                        .WithMany()
                        .HasForeignKey("OpcionId");

                    b.HasOne("USD.Alphanapsis.Entidades.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId");

                    b.Navigation("Opcion");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OpcionUsuario", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Opcion", "Opcion")
                        .WithMany()
                        .HasForeignKey("OpcionId");

                    b.HasOne("USD.Alphanapsis.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Opcion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Orden", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.CentroSaludAsistencial", "CentroSaludAsistencial")
                        .WithMany()
                        .HasForeignKey("CentroSaludAsistencialId");

                    b.HasOne("USD.Alphanapsis.Entidades.CentroSaludOrigen", "CentroSaludOrigen")
                        .WithMany()
                        .HasForeignKey("CentroSaludOrigenId");

                    b.HasOne("USD.Alphanapsis.Entidades.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId");

                    b.HasOne("USD.Alphanapsis.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.Procedencia", "Procedencia")
                        .WithMany()
                        .HasForeignKey("ProcedenciaId");

                    b.HasOne("USD.Alphanapsis.Entidades.ServicioSalud", "ServicioSalud")
                        .WithMany()
                        .HasForeignKey("ServicioSaludId");

                    b.HasOne("USD.Alphanapsis.Entidades.TipoOrden", "TipoOrden")
                        .WithMany()
                        .HasForeignKey("TipoOrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.TipoPaciente", "TipoPaciente")
                        .WithMany()
                        .HasForeignKey("TipoPacienteId");

                    b.Navigation("CentroSaludAsistencial");

                    b.Navigation("CentroSaludOrigen");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");

                    b.Navigation("Procedencia");

                    b.Navigation("ServicioSalud");

                    b.Navigation("TipoOrden");

                    b.Navigation("TipoPaciente");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OrdenPaquete", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoId");

                    b.HasOne("USD.Alphanapsis.Entidades.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.Paquete", "Paquete")
                        .WithMany()
                        .HasForeignKey("PaqueteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("Orden");

                    b.Navigation("Paquete");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OrdenPaqueteAcceso", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.OrdenPaquete", "OrdenPaquete")
                        .WithMany()
                        .HasForeignKey("OrdenPaqueteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Orden");

                    b.Navigation("OrdenPaquete");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OrdenPaqueteDetalle", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("OrdenId");

                    b.HasOne("USD.Alphanapsis.Entidades.OrdenPaquete", "OrdenPaquete")
                        .WithMany()
                        .HasForeignKey("OrdenPaqueteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");

                    b.Navigation("OrdenPaquete");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OrdenPaqueteImagenes", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.OrdenPaquete", "OrdenPaquete")
                        .WithMany()
                        .HasForeignKey("OrdenPaqueteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Orden");

                    b.Navigation("OrdenPaquete");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OrdenPaqueteTramas", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.OrdenPaquete", "OrdenPaquete")
                        .WithMany()
                        .HasForeignKey("OrdenPaqueteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Orden");

                    b.Navigation("OrdenPaquete");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OrdenServicioCalculado", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.OrdenServicioFormula", "OrdenServicioFormula")
                        .WithMany()
                        .HasForeignKey("OrdenServicioFormulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrdenServicioFormula");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.OrdenServicioFormula", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Paciente", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId");

                    b.HasOne("USD.Alphanapsis.Entidades.Ubigeo", "Ubigeo")
                        .WithMany()
                        .HasForeignKey("UbigeoId");

                    b.Navigation("TipoDocumento");

                    b.Navigation("Ubigeo");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Paquete", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.AreaEstudio", "AreaEstudio")
                        .WithMany()
                        .HasForeignKey("AreaEstudioId");

                    b.HasOne("USD.Alphanapsis.Entidades.TipoMuestraAnalizador", "TipoMuestraAnalizador")
                        .WithMany()
                        .HasForeignKey("TipoMuestraAnalizadorId");

                    b.Navigation("AreaEstudio");

                    b.Navigation("TipoMuestraAnalizador");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.PaqueteConexion", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Paquete", "Paquete")
                        .WithMany()
                        .HasForeignKey("PaqueteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paquete");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.PaqueteEquipo", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.Paquete", "Paquete")
                        .WithMany()
                        .HasForeignKey("PaqueteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("Paquete");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.PaqueteServicio", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Paquete", "Paquete")
                        .WithMany()
                        .HasForeignKey("PaqueteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paquete");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.ParametroCalculado", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.PaqueteEquipo", "PaqueteEquipo")
                        .WithMany()
                        .HasForeignKey("PaqueteEquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaqueteEquipo");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.ParametroEquipo", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.ParametroInterfaz", "ParametroInterfaz")
                        .WithMany()
                        .HasForeignKey("ParametroInterfazId");

                    b.Navigation("Equipo");

                    b.Navigation("ParametroInterfaz");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.ParametroInterfaz", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.TipoInterfaz", "TipoInterfaz")
                        .WithMany()
                        .HasForeignKey("TipoInterfazId");

                    b.Navigation("TipoInterfaz");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.SGSSSolExaLab", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("OrdenId");

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.SGSSSolExaLabCPS", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("OrdenId");

                    b.HasOne("USD.Alphanapsis.Entidades.OrdenPaquete", "OrdenPaquete")
                        .WithMany()
                        .HasForeignKey("OrdenPaqueteId");

                    b.HasOne("USD.Alphanapsis.Entidades.SGSSSolExaLab", "SGSSSolExaLab")
                        .WithMany()
                        .HasForeignKey("SGSSSolExaLabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");

                    b.Navigation("OrdenPaquete");

                    b.Navigation("SGSSSolExaLab");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Servicio", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.AreaEstudio", "AreaEstudio")
                        .WithMany()
                        .HasForeignKey("AreaEstudioId");

                    b.HasOne("USD.Alphanapsis.Entidades.Metodo", "Metodo")
                        .WithMany()
                        .HasForeignKey("MetodoId");

                    b.Navigation("AreaEstudio");

                    b.Navigation("Metodo");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.ServicioAgrupamiento", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Agrupamiento", "Agrupamiento")
                        .WithMany()
                        .HasForeignKey("AgrupamientoId");

                    b.HasOne("USD.Alphanapsis.Entidades.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agrupamiento");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.ServicioInterfaz", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Equipo", "Equipo")
                        .WithMany()
                        .HasForeignKey("EquipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.TrazabilidadAcceso", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.TrazabilidadServicio", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.Usuario", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("EspecialidadId");

                    b.HasOne("USD.Alphanapsis.Entidades.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId");

                    b.Navigation("Especialidad");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.UsuarioPerfil", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfil");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("USD.Alphanapsis.Entidades.UsuarioSede", b =>
                {
                    b.HasOne("USD.Alphanapsis.Entidades.CentroSaludAsistencial", "CentroSaludAsistencial")
                        .WithMany()
                        .HasForeignKey("CentroSaludAsistencialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.CentroSaludOrigen", "CentroSaludOrigen")
                        .WithMany()
                        .HasForeignKey("CentroSaludOrigenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("USD.Alphanapsis.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CentroSaludAsistencial");

                    b.Navigation("CentroSaludOrigen");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
